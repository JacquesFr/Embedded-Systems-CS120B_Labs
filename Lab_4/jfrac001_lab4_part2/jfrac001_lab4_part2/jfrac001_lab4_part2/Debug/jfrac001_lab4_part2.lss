
jfrac001_lab4_part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000330  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002bc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000330  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000330  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000360  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000003a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008c0  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007d6  00000000  00000000  00000c88  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003fe  00000000  00000000  0000145e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  0000185c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000462  00000000  00000000  00001890  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001cf2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	53 c0       	rjmp	.+166    	; 0xa8 <__ctors_end>
   2:	00 00       	nop
   4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
   6:	00 00       	nop
   8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
   a:	00 00       	nop
   c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
   e:	00 00       	nop
  10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
  12:	00 00       	nop
  14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
  16:	00 00       	nop
  18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
  22:	00 00       	nop
  24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
  26:	00 00       	nop
  28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
  32:	00 00       	nop
  34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
  36:	00 00       	nop
  38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
  42:	00 00       	nop
  44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
  46:	00 00       	nop
  48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
  52:	00 00       	nop
  54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
  56:	00 00       	nop
  58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
  62:	00 00       	nop
  64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
  66:	00 00       	nop
  68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
  72:	00 00       	nop
  74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
  76:	00 00       	nop
  78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
  82:	00 00       	nop
  84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
  86:	00 00       	nop
  88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	71 00       	.word	0x0071	; ????
  8e:	84 00       	.word	0x0084	; ????
  90:	a2 00       	.word	0x00a2	; ????
  92:	c4 00       	.word	0x00c4	; ????
  94:	a6 00       	.word	0x00a6	; ????
  96:	c8 00       	.word	0x00c8	; ????
  98:	e5 00       	.word	0x00e5	; ????
  9a:	eb 00       	.word	0x00eb	; ????
  9c:	f4 00       	.word	0x00f4	; ????
  9e:	fd 00       	.word	0x00fd	; ????
  a0:	19 01       	movw	r2, r18
  a2:	10 01       	movw	r2, r0
  a4:	2c 01       	movw	r4, r24
  a6:	35 01       	movw	r6, r10

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf ef       	ldi	r28, 0xFF	; 255
  ae:	d0 e4       	ldi	r29, 0x40	; 64
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_clear_bss>:
  b4:	21 e0       	ldi	r18, 0x01	; 1
  b6:	a0 e0       	ldi	r26, 0x00	; 0
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	01 c0       	rjmp	.+2      	; 0xbe <.do_clear_bss_start>

000000bc <.do_clear_bss_loop>:
  bc:	1d 92       	st	X+, r1

000000be <.do_clear_bss_start>:
  be:	a4 30       	cpi	r26, 0x04	; 4
  c0:	b2 07       	cpc	r27, r18
  c2:	e1 f7       	brne	.-8      	; 0xbc <.do_clear_bss_loop>
  c4:	e7 d0       	rcall	.+462    	; 0x294 <main>
  c6:	f8 c0       	rjmp	.+496    	; 0x2b8 <_exit>

000000c8 <__bad_interrupt>:
  c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <tick>:
void tick(){
	//Local Variables
	
	
	
	switch(state)	{		//State Transitions
  ca:	e0 91 03 01 	lds	r30, 0x0103	; 0x800103 <state>
  ce:	8e 2f       	mov	r24, r30
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	87 30       	cpi	r24, 0x07	; 7
  d4:	91 05       	cpc	r25, r1
  d6:	08 f0       	brcs	.+2      	; 0xda <tick+0x10>
  d8:	7c c0       	rjmp	.+248    	; 0x1d2 <tick+0x108>
  da:	fc 01       	movw	r30, r24
  dc:	ea 5b       	subi	r30, 0xBA	; 186
  de:	ff 4f       	sbci	r31, 0xFF	; 255
  e0:	e2 c0       	rjmp	.+452    	; 0x2a6 <__tablejump2__>
		
		case(Init):
			state = wait;
  e2:	81 e0       	ldi	r24, 0x01	; 1
  e4:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
			count = 0x07;
  e8:	87 e0       	ldi	r24, 0x07	; 7
  ea:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
			PORTC = count;
  ee:	88 b9       	out	0x08, r24	; 8
		default:
			state = Init;
		break;
	}
	
	switch(state){		//State Actions
  f0:	e0 91 03 01 	lds	r30, 0x0103	; 0x800103 <state>
  f4:	8e 2f       	mov	r24, r30
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	87 30       	cpi	r24, 0x07	; 7
  fa:	91 05       	cpc	r25, r1
  fc:	08 f0       	brcs	.+2      	; 0x100 <tick+0x36>
  fe:	c1 c0       	rjmp	.+386    	; 0x282 <tick+0x1b8>
 100:	fc 01       	movw	r30, r24
 102:	e3 5b       	subi	r30, 0xB3	; 179
 104:	ff 4f       	sbci	r31, 0xFF	; 255
 106:	cf c0       	rjmp	.+414    	; 0x2a6 <__tablejump2__>
			PORTC = count;
		break;
		
		case(wait):
		
			if((add_button == 0) && (sub_button == 0)){
 108:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <add_button>
 10c:	81 11       	cpse	r24, r1
 10e:	bc c0       	rjmp	.+376    	; 0x288 <tick+0x1be>
 110:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <sub_button>
 114:	88 23       	and	r24, r24
 116:	09 f4       	brne	.+2      	; 0x11a <tick+0x50>
 118:	67 c0       	rjmp	.+206    	; 0x1e8 <tick+0x11e>
 11a:	08 c0       	rjmp	.+16     	; 0x12c <tick+0x62>
				state = wait;
			}
		
			else if((add_button & 0x01) && (sub_button == 0)){
 11c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <sub_button>
 120:	81 11       	cpse	r24, r1
 122:	0c c0       	rjmp	.+24     	; 0x13c <tick+0x72>
				state = add_pressed;
 124:	82 e0       	ldi	r24, 0x02	; 2
 126:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
 12a:	67 c0       	rjmp	.+206    	; 0x1fa <tick+0x130>
			}
		
			else if((add_button == 0) && (sub_button & 0x02)){
 12c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <sub_button>
 130:	81 ff       	sbrs	r24, 1
 132:	04 c0       	rjmp	.+8      	; 0x13c <tick+0x72>
				state = sub_pressed;
 134:	83 e0       	ldi	r24, 0x03	; 3
 136:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
 13a:	7b c0       	rjmp	.+246    	; 0x232 <tick+0x168>
			}
		
			else{
				state = reset;
 13c:	86 e0       	ldi	r24, 0x06	; 6
 13e:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
 142:	93 c0       	rjmp	.+294    	; 0x26a <tick+0x1a0>
			}
		
		break;
		
		case(add_pressed):
			state = add;
 144:	84 e0       	ldi	r24, 0x04	; 4
 146:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
		break;
 14a:	6a c0       	rjmp	.+212    	; 0x220 <tick+0x156>
		
		case(add):
			if((add_button == 0) && (sub_button == 0)){
 14c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <add_button>
 150:	81 11       	cpse	r24, r1
 152:	9d c0       	rjmp	.+314    	; 0x28e <tick+0x1c4>
 154:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <sub_button>
 158:	81 11       	cpse	r24, r1
 15a:	0a c0       	rjmp	.+20     	; 0x170 <tick+0xa6>
				state = wait;
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
 162:	42 c0       	rjmp	.+132    	; 0x1e8 <tick+0x11e>
			}
		
			else if((add_button & 0x01) && (sub_button == 0)){
 164:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <sub_button>
 168:	88 23       	and	r24, r24
 16a:	09 f4       	brne	.+2      	; 0x16e <tick+0xa4>
 16c:	59 c0       	rjmp	.+178    	; 0x220 <tick+0x156>
 16e:	08 c0       	rjmp	.+16     	; 0x180 <tick+0xb6>
				state = add;
			}
		
			else if((add_button == 0) && (sub_button & 0x02)){
 170:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <sub_button>
 174:	81 ff       	sbrs	r24, 1
 176:	04 c0       	rjmp	.+8      	; 0x180 <tick+0xb6>
				state = sub_pressed;
 178:	83 e0       	ldi	r24, 0x03	; 3
 17a:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
 17e:	59 c0       	rjmp	.+178    	; 0x232 <tick+0x168>
			}
		
			else{
				state = reset;
 180:	86 e0       	ldi	r24, 0x06	; 6
 182:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
 186:	71 c0       	rjmp	.+226    	; 0x26a <tick+0x1a0>
			}
		break;
		
		case(sub_pressed):
			state = subtract;
 188:	85 e0       	ldi	r24, 0x05	; 5
 18a:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
		break;
 18e:	64 c0       	rjmp	.+200    	; 0x258 <tick+0x18e>
		
		case(subtract):
			if((add_button == 0) && (sub_button == 0)){
 190:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <add_button>
 194:	81 11       	cpse	r24, r1
 196:	0b c0       	rjmp	.+22     	; 0x1ae <tick+0xe4>
 198:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <sub_button>
 19c:	81 11       	cpse	r24, r1
 19e:	04 c0       	rjmp	.+8      	; 0x1a8 <tick+0xde>
				state = wait;
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
 1a6:	20 c0       	rjmp	.+64     	; 0x1e8 <tick+0x11e>
			}
		
			else if((add_button == 0) && (sub_button & 0x02)){
 1a8:	81 fd       	sbrc	r24, 1
 1aa:	56 c0       	rjmp	.+172    	; 0x258 <tick+0x18e>
 1ac:	0a c0       	rjmp	.+20     	; 0x1c2 <tick+0xf8>
				state = subtract;
			}
		
			else if((add_button & 0x01) && (sub_button == 0)){
 1ae:	80 ff       	sbrs	r24, 0
 1b0:	08 c0       	rjmp	.+16     	; 0x1c2 <tick+0xf8>
 1b2:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <sub_button>
 1b6:	81 11       	cpse	r24, r1
 1b8:	04 c0       	rjmp	.+8      	; 0x1c2 <tick+0xf8>
				state = add_pressed;
 1ba:	82 e0       	ldi	r24, 0x02	; 2
 1bc:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
 1c0:	1c c0       	rjmp	.+56     	; 0x1fa <tick+0x130>
			}
		
			else{
				state = reset;
 1c2:	86 e0       	ldi	r24, 0x06	; 6
 1c4:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
 1c8:	50 c0       	rjmp	.+160    	; 0x26a <tick+0x1a0>
			}
		break;
		
		case(reset):
			state = wait;
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
		break;
 1d0:	0b c0       	rjmp	.+22     	; 0x1e8 <tick+0x11e>
		
		default:
			state = Init;
 1d2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <state>
		break;
	}
	
	switch(state){		//State Actions
		case(Init):
			add_button = PINA & 0x01;
 1d6:	80 b1       	in	r24, 0x00	; 0
 1d8:	81 70       	andi	r24, 0x01	; 1
 1da:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <add_button>
			sub_button = PINA & 0x02;
 1de:	80 b1       	in	r24, 0x00	; 0
 1e0:	82 70       	andi	r24, 0x02	; 2
 1e2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <sub_button>

		break;
 1e6:	08 95       	ret
		
		case(wait):
			add_button = PINA & 0x01;
 1e8:	80 b1       	in	r24, 0x00	; 0
 1ea:	81 70       	andi	r24, 0x01	; 1
 1ec:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <add_button>
			sub_button = PINA & 0x02;
 1f0:	80 b1       	in	r24, 0x00	; 0
 1f2:	82 70       	andi	r24, 0x02	; 2
 1f4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <sub_button>
		break;
 1f8:	08 95       	ret
		
		case(add_pressed):
		
			if(count < 9){
 1fa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1fe:	89 30       	cpi	r24, 0x09	; 9
 200:	28 f4       	brcc	.+10     	; 0x20c <tick+0x142>
				count = count + 1;
 202:	8f 5f       	subi	r24, 0xFF	; 255
 204:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
				PORTC = count;
 208:	88 b9       	out	0x08, r24	; 8
 20a:	01 c0       	rjmp	.+2      	; 0x20e <tick+0x144>
			}
			
			else{
				PORTC = count;
 20c:	88 b9       	out	0x08, r24	; 8
			}
			
			add_button = PINA & 0x01;
 20e:	80 b1       	in	r24, 0x00	; 0
 210:	81 70       	andi	r24, 0x01	; 1
 212:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <add_button>
			sub_button = PINA & 0x02;
 216:	80 b1       	in	r24, 0x00	; 0
 218:	82 70       	andi	r24, 0x02	; 2
 21a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <sub_button>
		break;
 21e:	08 95       	ret
		
		case(add):
			add_button = PINA & 0x01;
 220:	80 b1       	in	r24, 0x00	; 0
 222:	81 70       	andi	r24, 0x01	; 1
 224:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <add_button>
			sub_button = PINA & 0x02;
 228:	80 b1       	in	r24, 0x00	; 0
 22a:	82 70       	andi	r24, 0x02	; 2
 22c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <sub_button>
		break;
 230:	08 95       	ret
		
		case(sub_pressed):
		
			if(count > 0){
 232:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 236:	88 23       	and	r24, r24
 238:	29 f0       	breq	.+10     	; 0x244 <tick+0x17a>
				count = count - 1;
 23a:	81 50       	subi	r24, 0x01	; 1
 23c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
				PORTC = count;
 240:	88 b9       	out	0x08, r24	; 8
 242:	01 c0       	rjmp	.+2      	; 0x246 <tick+0x17c>
			}
		
			else{
				PORTC = count;
 244:	18 b8       	out	0x08, r1	; 8
			}
		
			add_button = PINA & 0x01;
 246:	80 b1       	in	r24, 0x00	; 0
 248:	81 70       	andi	r24, 0x01	; 1
 24a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <add_button>
			sub_button = PINA & 0x02;
 24e:	80 b1       	in	r24, 0x00	; 0
 250:	82 70       	andi	r24, 0x02	; 2
 252:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <sub_button>
		break;
 256:	08 95       	ret
		
		case(subtract):
			add_button = PINA & 0x01;
 258:	80 b1       	in	r24, 0x00	; 0
 25a:	81 70       	andi	r24, 0x01	; 1
 25c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <add_button>
			sub_button = PINA & 0x02;
 260:	80 b1       	in	r24, 0x00	; 0
 262:	82 70       	andi	r24, 0x02	; 2
 264:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <sub_button>
		break;
 268:	08 95       	ret
		
		case(reset):
			count = 0;
 26a:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
			PORTC = count;
 26e:	18 b8       	out	0x08, r1	; 8
		
			add_button = PINA & 0x01;
 270:	80 b1       	in	r24, 0x00	; 0
 272:	81 70       	andi	r24, 0x01	; 1
 274:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <add_button>
			sub_button = PINA & 0x02;
 278:	80 b1       	in	r24, 0x00	; 0
 27a:	82 70       	andi	r24, 0x02	; 2
 27c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <sub_button>
		break;
 280:	08 95       	ret
		
		default:
			state = Init;
 282:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <state>
		break;
	}
}
 286:	08 95       	ret
		
			if((add_button == 0) && (sub_button == 0)){
				state = wait;
			}
		
			else if((add_button & 0x01) && (sub_button == 0)){
 288:	80 fd       	sbrc	r24, 0
 28a:	48 cf       	rjmp	.-368    	; 0x11c <tick+0x52>
 28c:	57 cf       	rjmp	.-338    	; 0x13c <tick+0x72>
		case(add):
			if((add_button == 0) && (sub_button == 0)){
				state = wait;
			}
		
			else if((add_button & 0x01) && (sub_button == 0)){
 28e:	80 fd       	sbrc	r24, 0
 290:	69 cf       	rjmp	.-302    	; 0x164 <tick+0x9a>
 292:	76 cf       	rjmp	.-276    	; 0x180 <tick+0xb6>

00000294 <main>:

//Global Variables

int main(void)
{
	DDRA = 0x00; PINA = 0xFF;
 294:	11 b8       	out	0x01, r1	; 1
 296:	8f ef       	ldi	r24, 0xFF	; 255
 298:	80 b9       	out	0x00, r24	; 0
	DDRC = 0xFF; PINC = 0x00;
 29a:	87 b9       	out	0x07, r24	; 7
 29c:	16 b8       	out	0x06, r1	; 6

	state = Init;	
 29e:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <state>
	
	while (1)
	{
		tick();
 2a2:	13 df       	rcall	.-474    	; 0xca <tick>
 2a4:	fe cf       	rjmp	.-4      	; 0x2a2 <main+0xe>

000002a6 <__tablejump2__>:
 2a6:	ee 0f       	add	r30, r30
 2a8:	ff 1f       	adc	r31, r31
 2aa:	00 24       	eor	r0, r0
 2ac:	00 1c       	adc	r0, r0
 2ae:	0b be       	out	0x3b, r0	; 59
 2b0:	07 90       	elpm	r0, Z+
 2b2:	f6 91       	elpm	r31, Z
 2b4:	e0 2d       	mov	r30, r0
 2b6:	09 94       	ijmp

000002b8 <_exit>:
 2b8:	f8 94       	cli

000002ba <__stop_program>:
 2ba:	ff cf       	rjmp	.-2      	; 0x2ba <__stop_program>
